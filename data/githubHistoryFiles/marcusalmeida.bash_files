clear
vi
clear
more /etc/fstab 
ls /media/
ls
cd /media/
ls
cd ..
clear
exit
dmesg
dmesg | grep -i "DVD"
mount /mnt/sr0
cd /mnt/
ls
cd ..
clear
exit
dmesg | grep -i "DVD"
dir
ls
sudo reboot
sudo apt-get install thunar-volman
cat /etc/fstab 
clear
exit
dmesg | tail 
dmesg | grep -i "DVD"
sudo mount /media/cdrom0/ -o unhide
ls /media
cd /mei
sudo ls /media
sudo su 
exit
sudo apt-get install terminator
cd /var/lib/apt/lists/
ls
cd 
clear
exit 
sudo apt-get install git-core git-gui git-doc
sudo apt-get upgrade 
sudo apt-get update 
sudo rm /var/lib/apt/lists/partial/br.archive.ubuntu.com_ubuntu_dists_natty_universe_source_Sources*
sudo apt-get update 
cd /bar/lib/apt/lists
cd /var/lib/apt/lists
ls
ls | grep -i 'pt'
sudo apt-get update 
sudo gefdit /etc/apt/sources.list
sudo gedit /etc/apt/sources.list
ls
ls | grep -i 'BR'
la 
ls -a
ls -v
ll
ll *BR
clear
ll *BR
rm *BR
sudo rm *BR
cd 
sudo apt-get upgrade 
sudo apt-get install git-core git-gui git-doc
sudo apt-get install terminator 
sudo apt-get install gvim 
sudo apt-get install vim-gnome 
clear
cd .vim
ls
cp _vimrc ../.vimrc
cd 
@v
vim 
gvim 
clear
ls
ls -a
cd .vim
ls
@v
vim
cd ..
rm -rf .vim
vim 
cler
clear
vim
clear
exit
ls
mkdir repositories
cd repositories/
mkdir git 
cd git
git clone https://github.com/marcusalmeida/vimfiles.git
cp vimfiles/ ~/.vim/
cp -r vimfiles/ ~/.vim/
sudo apt-get install  vim 
exit
sudo apt-get install curl 
sudo apt-get install ruby-1.9.2 rubygems irb ri rdoc rake
suod apt-get install sqlite3 libsqlite3-dev
sudo apt-get install sqlite3 libsqlite3-dev
How to install Rails 3.0 and Ruby 1.9.2 on Ubuntu
Published 9/1/2010 7:30 PM by Toran Billups 65 Comments
When ruby on rails 1.0 was released back in 2005 it was all the rage. And being someone who was often distracted by the next great web framework I decided to have a look. So in early 2006 I built a small application to see what all the hype was about. I immediately saw the value of a strongly opinionated framework, something the average asp.net developer like myself didn’t know much about at the time.
Fast-forward to August 29th 2010 - Rails 3.0 was released. Just prior to this release I started looking at the web framework again and because I always strive for the optimal developer experience it meant I would need to quit my windows addiction. Not that you can’t do ruby development on windows, but most of the time it’s not worth the pain.
With that said, I paved my development machine and installed Ubuntu 10.04. But as I started looking around for a "how-to" of sorts on installing rails 3 with ruby 1.9.2 I couldn’t find a simple guide that got me up and running error free. Each time I started with a vanilla install of Ubuntu and ended up with what felt like a "hacked together" development environment. But last night I decided to give it another try and document the steps needed for someone like me coming in with minimal linux experience.
Install RVM 1.0.1
First be sure to do a quick update before you get started.
sudo apt-get update
sudo apt-get install libruby1.8 zlib1g-dev libssl-dev libreadline5-dev build-essential
ruby
sudo apt-get install ruby rubygems irb ri rdoc rake
sudo pip install virtualenvwrapper
exit
cd Envs/
ls
pip install django 
sudo pip install django 
clear
@v
vim 
dir
ls -a
rm .vimrc
@v
dir
@gvim 
gvim 
clear
git apt-get install easy_install 
sudo  apt-get install easy_install 
sudo  apt-get install setuptools
sudo  apt-get install pip 
sudo  apt-get install python-pip
pip
pip install 
@v
ls -a 
cd repositories/
ls
cd git 
ls
cd vimfiles/
ls
cp _vimrc ~/.vimrc
@v
ls
mkdir ~/.vim/
nautilus
@v
gedit .vimrc
cd
gedit .vimrc
ls
cd .vim 
ls
cd ..
clear
cd .vim
l
more README 
sudo pip install Pytest 
@v
vim _vimrc
ls
cd ..
rm .vimrc 
clear
@v
@gv
clear
cd 
mkdir Envs
claer
clear
ls
ls -a
cd .pip
ls
cd ..
clear
sudo pip install Pyflakes
dir
cd repositories/
cd git
dir
cd vim 
cd vimfiles/
l
more README 
sudo pip install pep8 
clear
ls
cd autoload/
ls
more pathogen.vim 
clar
clear
cd 
mount /dev/sr0
mount /dev/sr0 /mnt/cdrom/
sudo /dev/sr0 /mnt/cdrom/
sudo mount /dev/sr0 /mnt/cdrom/
sudo mount -t ext2 /dev/sr0 /mnt/cdrom/
sudo mount -t ext3 /dev/sr0 /mnt/cdrom/
sudo mount -t ntfs /dev/sr0 /mnt/cdrom/
sudo mount -t ntfs-3g /dev/sr0 /mnt/cdrom/
sudo mount -t udf /dev/sr0 /mnt/cdrom/
sudo mount -t iso9660 /dev/sr0 /mnt/cdrom/
dir
s
ls
dir
ls
cd .local/
ls
cd share/
dir
cd ..
ls
cd ..
ls
ls -a
cd .vim 
ls
rm -rf *
ls
cp ~/repositories/git/vimfiles/_vimrc .vimrc
rm .vimrc 
cp ~/repositories/git/vimfiles/_vimrc ~/.vimrc
@v
clar
clear
ls
cd .
nautilus   ~/repositories/git/vimfiles/
@v 
exit
sudo apt-get install vim-full gvim 
sudo apt-get install vim-full 
sudo apt-get install vim
sudo apt-get install vim 
vim 
dir
ls
ls -a
touch .vimrc
@gv
touch .gvimrc
clear
netstat
netstat -a
clear
dir
cd repositories/git
git clone https://github.com/sontek/dotfiles.git
cd dotfiles/
s
ls
cp -r _fonts/ ~/.fonts
cp _dir_colors ~/.dir_colors
cp _gitconfig ~/.gitconfig
cp _inputrc ~/.inputrc
cp _pdbrc ~/.pdbrc
cp _pdbrc.py ~/.pdbrc.py 
cp _pythonrc.py ~/.pythonrc.py 
cd 
@gv .gitconfig 
sudo apt-get install meld 
meld
@v
sudo apt-get uninstall vim-gnome
sudo apt-get remove vim-gnome
sudo apt-get remove vim
clear
@v
ls .vimrc
ls .vim
vim 
vi
sudo apt-get install vim-gtk
gvim 
clar
sudo apt-get remove vim-gtk 
sudo apt-get remove vim-gnome
gvimtutor 
gvim
clear
rm .vimrc
ls
gvim 
vim
sudo apt-get install gvim 
sudo apt-get install vim-gnome
sudo apt-get install vim
gvim 
@gv
@pa
dir
ls
ls -a
vi .bash_aliases 
@pm
clear
ls
cd .vim
ls
cd ..
cd repositories/git/vimfiles/
s
ls
cp _vimrc ~/.vimrc
cd 
gvim .vimrc
clear
@v .vimrc
@v test.py 
exit
python 
nautilus .
gksudo nautilus . 
clear
ps -aux
clear
exit
cd Downloads/
ls
tar zxfv mox-0.5.3.tar.gz 
cd mox-0.5.3/
ls
python setup.py install 
suod python setup.py install 
sudo python setup.py install 
cd ..
rm -rf mox-0.5.3
clear
cd ..
exit
python 
ipython
sudo apt-get install ipython 
ipythonx
ipython-wx
ipython
clear
exit
clear
cd  repositories/hg/
hg clone https://continuous-test.googlecode.com/hg/ continuous-test
cd continuous-test
ls
cd tests/
ls
more fixtures/
ls
cd fixtures/
ls
cd sub/
ls
cd ..
clear
ls
cd contest/
ls
more sound.py 
cd ..
dir
ls
cd tests/
l
ls
more test_mock.py 
cd ..
clear
cd ..
clear
exit
@v .vimrc
cd repositories/
cd git
cd dotfiles/
ls
@v _vim
@v _vimrc 
cd ..
cd .
cd 
cler
clear
dir
ls -a
sl .fonts/
ls .fonts
t
exit
sudo apt-get install ack-grep
ack-grep 
cd 
@v .vimrc
cp .vimrc ~/repositories/git/vimfiles/_vimrc 
cd repositories/git/vimfiles/
git status
git add .
git commit -m 'settings for ack.vim plugins'
git pull 
git pushh
git push
git push origin master
exit
@v .vimrc
clear
cd .vim
ls
cd bundle/
ls
cd ack/
ls
more READ
more README.md 
exit
sudo apt-get install getlibs-all
sudo apt-get install getlibs
sudo dpkg =i getlibs-all.deb
exit
cd .config/
ls
cd tem
cd terminator/
ls
@v config 
exit
ks
clear
exit
dir
ls
clear
sudo apt-get google-chrome
sudo apt-get install google-chrome
cd vim
cd repositories/git/vimfiles/
@v _vimrc 
git branch
git status
git commit -m "removing log messages"
git add _vimrc
git commit -m "removing log messages"
git pull 
git push
clear
cd 
sudo pip pudb 
sudo pip install pudb
sudo apt-get install python-pudb
@v test.py 
python -m pudb.run test.py 
clear
@v test.py 
py.test test.py
python 
@v test.py 
py.test test.py
sudo pip install pabric 
sudo pip install fabric
@v fabfile.py
fab hello 
rm fabfile.py*
clear
dir
ls
rm *.pyc
clear
dir
ls
cd repositories/
dir
cd git
dir
cls
clear
dir
clear
ls
cd ..
clear
dir
cd ..
clear
dir
ls
@v test.py 
clear
@v t.c
gcc t.c -oteste
./teste 
rm teste
tm t.c 
rm t.c 
clear
mkdir snadbox 
rm snadbox/
rm -rfsnadbox/
rm -rf snadbox/
mkdir sandbox 
cd sandbox/
@da startproject project
cd project/
@da startapp mysite
@gv .
cd  mysite/
@gv .
cd ..
@pm sql 
@pm sql mysite/
@pm sql mysite
@pm syncdb
@pm runserver
clear
sudo pip install pymox
sudo pip install pymock
clear
cd ..
clear
python 
clear
dir
ls
@v test.py
py.test test.py
@v teste.py
@v test.py
py.test test.py
@v test.py
py.test test.py
waiter
clar
dir
ls
cd repositories/
dir
cd git
dir
ls
cd dot
cd vimfiles/
ls
git status
git branch
cd ..
dir
cd dotfiles/
git status
git branch
cd ..
d
cd 
clear
cd sandbox/project/mysite/
@v tests.py
cd ..
dir
cd tdd
ls
cd test/
ls
dir
@v 
@v test_calculator.py
@v calculator.py 
@v test_calculator.py
grep calculator *.py
ack-grep calculator
ls
rm *.pyc
ls
ack-grep -i Calculator
@v .
cd 
@v .vimrc
clear
cd pro
ls
cd sandbox/project/
@v .
clear
sudo pip install -U mock 
clear
ack-grep -i settings ./
ack-grep -i settings ./ --column
ack-grep -i -H  settings ./ --column
clear
ack-grep -i MEDIA ./ 
ack-grep -i MEDIA 
ack-grep -i MEDIA *.py
ack-grep -i views *.py
ack-grep -i views *.py ./
ack-grep -i views *.py 
clear
ack-grep -i views *.py 
ack-grep -i views *.py ./
ack-grep -i -H views *.py ./
clear
cd 
s
ls -a
exit
sudo apt-get install mercurial 
@v .hgrc
cp ~/repositories/git/dotfiles/_hgrc ~/.hgrc
@v .hgrc
cd repositories/hg
cd repositories/
mkdir hg 
cd hg
clear
hg clone http://continuous-test.googlecode.com/hg/ continuous-test-read-only
ls
cd continuous-test-read-only/
python setup.py install 
sudo python setup.py install 
clear
cd ..
python -m contest.main
dir
mv test.py test_person.py 
rm test.pyc
python -m contest.main
dir
cd sandbox/
dir
cd project/
ls
cd mysite/
python -m contest.main
cd ..
mkdir tdd
cd tdd/
mkdir test
python -m contest.main
clear
python -m contest.main
cd ..
ls
cd project/
ls
cd mysite/
ls
dir
lls
@pm runserver 
cd ..
@pm runserver 
clear
cd..
clear
dir
cd ..
ls
clear
exit
mkdir bitchx
cd bitchx/
wget http://www.bitchx.com/download/BitchX-1.1-final-linux.tar.gz
tar -zxfv BitchX-1.1-final-linux.tar.gz 
ks
tar 
tar zxfv BitchX-1.1-final-linux.tar.gz 
./BitchX 
clear
sudo apt-get install tcllib
sudo ln -s BitchX /usr/bin/BitchX
cd 
cd bin
cd bitchx/
ls -s /usr/bin/BitchX ./BitchX
sudo ls -s /usr/bin/BitchX ./BitchX
sudo ln -s /usr/bin/BitchX ./BitchX
ls
./BitchX 
clear
cd 
dir
ls
cd bitchx/
sudo rm -s /usr/bin/BitchX 
sudo rm  /usr/bin/BitchX 
sudo ln -s BitchX /usr/bin/Bitchx
cd 
sudo chmod +x /usr/bin/BitchX
quit
exit
py.test
py.test --version 
cd ..
clear
cd
cd sandbox/
dir
@v sample_test.py
py.test sample_test.py 
quit 
exit
bitchx/BitchX 
clear
exit
cd Downloads/
ls
chmod +x VMware-Player-3.1.4-385536.x86_64.bundle 
./VMware-Player-3.1.4-385536.x86_64.bundle 
gksudo ./VMware-Player-3.1.4-385536.x86_64.bundle 
translate  pt-BR en 
translate 
cd sandbox/
./translate.py en pt-BR
clear
translate en pt-BR
translate 
@v translate.py 
cd ..
cd repositories/git/vim
cd repositories/git/vimfiles/
ls
git pull origin master 
cd bundle/snipmate/snippets/python/
@v encoding.snippet 
@v bang.snippet 
cd ..
git status
clear
dir
cd 
cd -
cd 
cd - 
cd -
ls
md5sum protocolo_alteracao_valocidade_velox 
cd Downloads/
ls
md5sum adobeair.deb 
clear
cd 
vmware-gksu
gksudo vmware
gksudo vmware-installer
gksudo vmplayer
more /tmp/vmware-root/setup-2364.log
sudo more /tmp/vmware-root/setup-2364.log
sudo more /tmp/vmware-marcus/appLoader-2009.log 
clear
cd /tmp/vmware-marcus/
ls
rm *
ls
rm *
ls
more appLoader-3338.log 
tail appLoader-3338.log 
ls
tail unity-helper-3338.log 
tail unity-helper-ipc-\:0.0 
rm *
ls
cd ..
ls
cd virtual-marcus.5d3FVn/
ls
cd ..
cd vmware-marcus/
ls
cd ..
cd VMwareDnD/
ls
cd ..
cd
ps aux
killall -9 vmware
killall -9 vmware*
top 
ps aux | ack-grep 'vmware'
kill -9 853
sudo su
ps aux | ack-grep 'vmware'
clear
ls
sudo su 
exit
cd Downloads/
ls
mkdir ~/.vim/plugin/
cp ScrollColor.vim ~/.vim/plugin/
@v
cd
@v .vimrc
@v .vimrc 
ls
cd sandbox/
ls
@v outro.py 
rm -rf ~/.vim/colors/
rm -rf ~/.vim/plugin/
@v ~/.vimrc
clear
exitt
exit
cd repositories/
cd git
ls
git clone https://github.com/vim-scripts/Color-Sampler-Pack.git
dir
cd Color-Sampler-Pack/
ls
more README 
ls
cp -R colors/ ~/.vim/
cp -R plugin/ ~/.vim/
exit
ssh 10.0.0.102
ping 10.0.0.102
rlogin 10.0.0.102
exit
translate en pt-BR
clear
exit
translate en pt-BR
clear
exit
translate en pt-BR
ipython 
python 
ipython
exit
ipython 
exit
sudo nautilus
exit
sudo apt-get install cups-pdf
exit
sudo chmod s /usr/lib/cups//backend/cups-pdf 
clear
ls
exit
ls
cd /
ls
cd var
ls
cd spool/
ls
cd cups-pdf/
ls
cd SPOOL/
ls
cd ..
cd
ls
cd PDF
ls
rm *pdf
ls
cd ..
cear
clear
exit
sudo apt-get install xchm
clear
exit
python 
clear
exit
cd bitchx/
./BitchX irc.freenode.net 6665 -n red5 
clear
cd 
cd rerpo
cd repositories/git/guide-to-testing-in-django/
cd ls
ls
cd posl
cd polls/
ls
cd tests/
ls
@v __init__.py
ls
more models.py
clear
exit
cd bitchx/
./BitchX 
./BitchX irc.freenode.net 6665 -n red5
clear
cd ..
cd Envs
dir
mkvirtualenv --help
mkvirtualenv --not-site-package OAS
mkvirtualenv --no-site-package OAS
cd OAS/
ls
cd oas-reporting/
pip -r requirements.txt 
pip install -r requirements.txt 
clear
@v 
@v .
clear
cd ..
l
dir
ls
more hook.log
more hook.log.1
cd ..
ls
cd Envs/
cd
cd sandbox/
dir
ls
@v .
more sample_test.py
more test_person.py
ls
cd por
cd project/
ls
cd mysite/
ls
mkdir tests 
cd tests/
touch __init__.py 
cd ..
ls
mv tests.py ./tests/
ls
@pm test
cd ..
@pm test
ls
cd mysite/
l
ls
@pm
cd ..
@pm
deactivate 
@pm 
@pm test
cd mysite/tests/
ls
@v tests.py 
cd ..
@pm test 
@pm test mysite/tests
@pm test mysite.tests
@pm test mysite.tests.tests
ls mysite/tests/tests.py 
more mysite/tests/tests.py 
@pm test mysite.tests.tests.SimpleTest
@pm test mysite.tests.SimpleTest
@pm test mysite.tests.tests.SimpleTest
ls
cd mysite/
ls
cd tests/
ls
more __init__.py
ls
echo "from tests import *" >> __init__.py
cd ..
@pm test
cd mysite/
cd tests/
ls
@v __init__.py
ls
@v tests.py
cd ..
@pm test
cd mysite/
ls
cd tests/
dir
rm *pyc
ls
@v tests.py 
ls
@v __init__.py 
cd ..
@pm test
cd mysite/
cd tests/
ls
mv tests.py test_simple.py
@v __init__.py
cd ..
@pm test
@v mysite/tests/__init__.py
@pm test
ls mysite/tests/test_simple
@pm test
@v mysite/tests/__init__.py
@pm test
@v mysite/tests/__init__.py
@pm test
@v mysite/tests/__init__.py
@pm test
cd mu
cd mysite/
ls
cd tests/
ls
rm tests.pyc 
@v __init__.py
cd ..
@pm test
@v mysite/tests/__init__.py
@pm test
cd mysite/
ls
@v views.py 
@v tests.py
gedit tests.py
cd ..
cd project/
@pm tests
@pm test
@v mysite/tests/__init__.py
@v test
ls
@pm test
cd mysite/tests/
ls
@v __init__.py
cd ..
@pm test
cd mysite/
ls
rm tests.py 
ls
cd ..
@pm test
cd mysite/tests/
ls
@v __init__.py
cd ..
@pm test
cd ..
cd repositories/
cd git/
ls
git clone https://github.com/toastdriven/guide-to-testing-in-django.git
cd guide-to-testing-in-django/
ls
cd polls/
ls
more __init__.py 
cd tests/
ls
more __init__.py 
cd ..
@pm test
ls
more README.rst 
more settings.py
ls
cd ..
cd .
cd ..
ls
cd sandbox/
dir
cd project/
ls
cd mysite/
ls
cd tests/
ls
@v __init__.py
cd ..
cd .
cd ..
@pm test
dir
ls
cd mysite/
ls
cd tests/
ls
rm *pyc
ls
mv test_simple.py simple.py 
@v __init__.py 
cd ..
@pm test
cd mysite/tests/
ls
@v simple.py
cd ..
@pm test
cd ..
cd project/
ls
rm -rf mysite/
@da startapp mysite
cd mysite/
ls
mkdir tests
cd tests/
touch __init__.py
cd ..
mv tests.py ./tests/
cd tests/
ls
mv tests.py example.py 
@v __init__.py 
@v example.py 
cd ..
@pm test
@pm test mysite.tests.example
@pm test mysite.tests.example.SimpleTest
clear
exit
@v modulo_relatorio.py 
mv modulo_relatorio.py /media/DIS
sudo cp modulo_relatorio.py /media/DISK_IMG/projetos/oas-reporting/
exit
python 
ipython 
cd sandbox/
ipython 
clear
ipython 
exit
cd /media/DISK_IMG/projetos/oas-reporting/
ls
@v . 
exit
sudo apt-get install libgnomevfs2-extra
exit
sudo smbpasswd -a marcus
host
HOSTNAME
echo $HOSTNAME
sudo smbpasswd -e marcus
cd /etc/
cd samba/
ls
@v smb.conf 
cd 
ls -a 
sudo smbpasswd -a marcus
sudo smbpasswd -e marcus
clear
pint 10.0.0.105
ping 10.0.0.105
clear
exit
sudo sudo apt-get install lib32asound2 lib32gcc1 lib32ncurses5 lib32stdc++6 lib32z1 libc6 libc6-i386 lib32nss-mdns
sudo getlibs -l libnss3.so.1d libnssutil3.so.1d libsmime3.so.1d libssl3.so.1d libnspr4.so.0d libplc4.so.0d libplds4.so.0d libgnome-keyring.so libgnome-keyring.so.0 libgnome-keyring.so.0.1.1
sudo apt-get install getlibs
sudo getlibs -l libnss3.so.1d libnssutil3.so.1d libsmime3.so.1d libssl3.so.1d libnspr4.so.0d libplc4.so.0d libplds4.so.0d libgnome-keyring.so libgnome-keyring.so.0 libgnome-keyring.so.0.1.1
sudo getlibs libadobecertstore.so
exit
sudo add-apt-repository "deb http://archive.canonical.com/ubuntu natty partner
sudo add-apt-repository "deb http://archive.canonical.com/ubuntu natty partner"
sudo apt-get update 
sudo add-apt-repository "deb http://archive.canonical.com/ubuntu natty partner"
sudo apt-get update 
cd Downloads/
ls
rm adobeair_2.6.0.19140-0natty1_i386.deb 
ls
clear
ls
java -version 
cd 
ls
@v Teste.java
javac Teste.java 
rm Teste.java 
clear
mkdir tmp 
cp Downloads/adobeair.deb ./tmp/
cd tmp/
l
dpkg-deb -x adobeair.deb 
dpkg-deb -x adobeair.deb .
ls
rm -rf *
cd ../Downloads/
dpkg-deb -x adobeair.deb ../tmp/
dpkg-deb --control adobeair.deb ../tmp/DEBIAN
sed -i 
sed -i "s/i386/all" ../tmp/DEBIAN/control
dpkg -b ../tmp adobeair_64.deb
ls
rm -rf ../tmp
sudo dpkg -i adobeair_64.deb 
rm adobeair_64.deb 
mkdir tmp 
dpkg-deb -x adobeair.deb tmp 
dpkg-deb --control adobeair.deb tmp/DEBIAN 
cd tmp/
cd DEBIAN/
ls
ack-grep "s/i386/all/" 
ack-grep "s/i386/all/" *
ack-grep "i386" *
@v control 
ack-grep "i386" *
cd ..
ack-grep "i386" *
cd ..
dpkg -b tmp adobeair_64.deb
ls
sudo dpkg -i adobeair_64.deb 
cd ..
cd Documentos/
ls
exit
rlogin 10.0.0.106
ping 10.0.0.106
scp 10.0.0.106
ssh 10.0.0.106
rlogin 10.0.0.106
clear
exit
dir
cd Dowo
cd Downloads/
ls
rm -rf ubuntu-11.04-server-i386.iso 
clear
exirt
exit
dir
cd bitchx/
./BitchX irc.freenode.net 6665 -n marcusalmeida
cd 
exit
sudo su 
exit
rlogin marcus@10.0.0.106
clear
exit
cd sandbox/
ls
mkdir fab_project
cd fab_project/
@v fabfile.py
fab -l
fab clean deploy 
@v fabfile.py
fab -l
@v fabfile.py
fab -l
@v fabfile.py
fab -l
fab prepare
ls
fab clean

fab prepare
ls
fab -l
fab build
cd ..
ls
cd project/
ls
rm -rf *.pyc
ls
@v fabfile.py 
fab -l
fab pack 
ls
cd /tmp/
ls
rm my_project.tgz
cler
cd -
clear
ls
cd ..
ls
@v fabfile.py
fab -l 
fab deploy 
@v fabfile.py
fab -l
fab deploy 
ping ubuntu-server
ping 10.0.0.106
clear
exit
python 
exit
sudo apt-get install mplayer
mplayer 
cd Downloads/
ls
cd X-Men\ First\ Class\ 2011\ Hindi\ 720P\ BRRip\ x264\ E\ SuB\ xRG/
mplayer X-Men\ First\ Class\ 2011\ Hindi\ 720P\ BRRip\ x264\ E\ SuB\ xRG.avi 
cd ..
rm -rf X-Men\ First\ Class\ 2011\ Hindi\ 720P\ BRRip\ x264\ E\ SuB\ xRG/*
ls
nautilus . 
cd ..
clear
exit
sudo su 
exit
sudo ifconfig
exit
cd sandbox/
dir
ls
mkdir prj_shouth
cd prj_shouth/
ls
sudo easy_install South
ls
@da startproject project
@cd project/
s
ls
cd project/
ls
clear
@da startapp
@da startapp blog
@v settings.py 
rm -rf blog
clear
@pm startapp shouthtut
cd ..
rm -rf 
rm -rf project/
@da startproject project 
cd project/
@v settings.py 
@da startapp shouthtut
@v settings.py 
@v .
@v settings.py 
@pm syncdb 
@pm shell
@v settings.py 
@pm shell
@v settings.py 
@pm shell
@v settings.py
@pm shell
clear
@pm syncdb
ls
cd shouthtut/
ls
cd ..
@pm migrate 
@pm schemamigration --initial shouthtut
ls
la
ls -a
cd shouthtut/
lsl
ls
cd migrations/
ls
more 0001_initial.py 
cd ..
@pm migratie shouthtut
@pm migrate shouthtut
ls
cd ..
ls
rm database.db 
cd project/
ls
@pm migrate shouthtut
@pm syncdb 
@pm migrate shouthtut
@v .
@pm schemamigration shouthtut --auto
@pm migrate shouthtut
@v shouthtut/models.py
@pm schemamigration shouthtut --auto
@pm migrate shouthtut
@v shouthtut/models.py
@pm schemamigration shouthtut --auto
@pm migrate shouthtut
@pm migrate --list 
@pm migrate --list | grep -v "*"
man grep 
clear
@pm startapp southtut2
@v settings.py
@v southtut2/models.py 
@pm schemamigration --initial southtut2 
@pm migrate southtut2
@pm shell
@v southtut2/models.py 
@pm schemamigration  southtut2 --auto
@pm migrate southtut2
@pm datamigration southtut2 hash_password
@v southtut2/migrations/0003_hash_password.py 
@pm schemamigration  southtut2 --auto
@pm schemamigration 
@pm migrate 
ls
cd southtut2/
ls
cd migrations/
ls
cd ..
rm -rf southtut2
ls
cd ..
ls
rm database.db 
ls
cd project/
@pm syncdb 
@pm startapp southtut2
@pm syncdb 
@pm migrate shouthtut/
@pm migrate shouthtut
@v southtut2/models.py
@pm schemamigration --initial southtut2
@pm migrate southtut2
@pm shell
@v southtut2/models.py
@pm schemamigration southtut2 --auto 
@pm datamigration southtut2 hash_passwords 
@v southtut2/migrations/0003_hash_passwords.py 
@pm schemamigration southtut2 --auto 
@pm migrate southtut2
@pm shell 
@v southtut2
@pm migrate 0001
@pm migrate southtut2 0001
@pm migrate southtut2 0002
@pm migrate southtut2 0003
@pm migrate southtut2 0001
@pm migrate southtut2 
@pm graphmigrations | dot -Tpng -omigrations.png
sudo apt-get graphviz
sudo apt-get install  graphviz
@pm graphmigrations | dot -Tpng -omigrations.png
nautilus .
claer
clear
cd
cd repositories/hg/
hg clone https://bitbucket.org/andrewgodwin/south
cd south/
ls
more clean.sh 
more README
@v south
cd
cd -
cd ..
cd sandbox/
dir
ls
rm order_item1717.json 
s
ls
@ fabfile.py
@v fabfile.py
fab deploy 
dir
ls
mkdir deploying
cd deploying/
ls
cd ..
rm deploying/
rm -rf deploying/
cllar
clear
exit
python 
iptyhon 
ipython 
raise Runtime('raise error')
ipython 
clear
java
java -v
java -version
javac 
sudo apt-get install openjdk-6-jdk
ls
@v teste.java
javac teste.java 
java teste
ls
rm *.db
rm teste*
ls
more exemplo.json 
rm exemplo.json 
ls
more test.log 
rm test.log 
ls
cd bitchx/
./Bitchx irc.freenode.br -n marcusalmeida
./BitchX irc.freenode.br -n marcusalmeida
./BitchX irc.freenode.br 6665 -n marcusalmeida
./BitchX irc.freenode.net 6665 -n marcusalmeida
exit
sudo ifconfig
irb
exit
ipython 
clear
cd Downloads/
ls
cd ..
ls
cd Música
ls
cd Diana\ Krall\ -\ The\ Very\ Best\ of\ Diana\ Krall\ \[Jazz\]\[mp3\ 192-320\]\[h33t\]\[schon55\]/
ls
cd ..
clear
exir
exit
dir
ls
cd test/
dir
mv calculator.py ../
ls
rm calculator.pyc 
touch __init__.py
@v test_calculator.py
cd ../../project/
@v test 
ls
cd mysite/
ls
cd tests/
dir
ls
@ct 
cd ..
ciear
cd ..c
clear
cd ..
cd 
clear
cd sandbox/project/tdd
cd sandbox/tdd/
touch calculator.py
clear
cd ..
clear
exit
@v .bash_aliases 
source .bashrc
@p
ls
cd Pdf
cd PDF/
dir
ls
cd ..
cd sandbox/
dir
ls
cd tdd/
@ct
ls
cd test/
dir
cd ..
@ct
cd ..
dir
ls
cd project/
ls
@ct 
cd ..
cd tdd
dir
@ct 
clear
cd ..
t
exit
sudo apt-get install cairo-dock cairo-dock-plug-ins
cairo-dock
exit
cd /opt/TweetDeck/
ls
cd share/
ls
cd icons/
ls
exit
clear
cd bitchx/
./BitchX irc.freenode.net -n red5
exit
dir
cd bitchx/
./BitchX irc.freenode.net -n red5 
clear
exit
irb
exit
sudo apt-get install python-tk idle python-pmw python-imaging
exit
python 
cd sandbox/
@v tkinter_example.py 
@p tkinter_example.py 
@v tkinter_example.py 
@p tkinter_example.py 
clear
exit
@v 
claer
exit
iptyhon
@ip
sudo pip install lxml 
sudo apt-get install python-lxml
sudo pip install lxml 
sudo pip install lxml --upgrade
clar
clear
exit
ipython
exit
ipython 
clear
exit
cd repositories/git/
git clone --depth 1 https://github.com/joyent/node.git
cd node
git checkout origin/v0.4
git branch
git checkout master
export JOBS=2
mkdir ~/local
./configure --prefix=$HOME/local/node
make 
make install 
echo 'export PATH=$HOME/local/node/bin:$PATH' >> ~/.bash_profile
source ~/.profile
curl http://npmjs.org/install.sh | sh 
node
@v ~/.bash_profile 
cd ~/local/node/bin/
ls
node
./node
cd -
more /etc/profile
export PATH=\$HOME/local/node/bin:$PATH
node
rm -rf ~/local/
ls
env 
env[PATH]
env | ack-grep PATH
mkdir ~/local
./configure --prefix=$HOME/local/node
make & make install 
source ~/.bash_profile 
make install 
source ~/.bash_profile 
node
lcear
clear
curl http://npmjs.org/install.sh | sh  
npm install express
node 
noe
node
cd
echo 'console.log("hello world!");' >> helloworld.js
node helloworld.js 
node 
exit 
cd bitchx/
./BitchX irc.freenode.net -n marcusalmeida
clear
exit
cd sandbox/
dir
ls
translate 
translate pt-br en
clear
man sed
clear
cd repositories/git/
dir
cd ..
ls
cd sandbox/
dir
ls
ipython 
exit
cd Envs/
cd OAS/
dir
cd oas-reporting/
dir
ls
cd media/
ls
cd js/
dir
cd..
cd ..
@v settings.py
exit
cd 
cd Envs/
dir
cd OAS/
dir
cd oas-reporting/
ack-grep 'pdb' *.py
ack-grep 'pdb' ./**/*.py
ack-grep 'pudb' ./**/*.py
@v reports/views.py
quit
exit
cd /usr/local/lib/python2.7/site-packages/
ls
cd ..
cd dist-packages/
ls
cd pudb
ls
cd ..
ls
cd pudb-2011.1.egg-info/
ls
cd ..
ls
cd pudb
ls
ack-grep 'signal_init' *.py
ack-grep 'signal_restore' *.py
cd
easy_install pudb
sudo easy_install pudb
quit
exit
cd /usr/local/lib/python2.7/
ls
cd dist-packages/
ls
cd pudb-2011.1.egg-info/
ls
@v .
cd ..
cd pudb
@v .
exit
cd Envs/OAS/oas-reporting/
ls
cd templates/
ls
cd reports/
ls
@v results.html
translate en pt-BR
ls
dr
c ..
cd ..
@v settings.py
cd 
cd bitchx/
./BitchX irc.freenode.net -n red5
exit
@v .ipython/ipy_user_conf.py
exit
cd /usr/local/lib/python2.7/dist-packages/
ls
cd virtualenvwrapper
ls
cd ..
ls
cd ..
cd .
cd ..
cd /lib
ls
whereis urwid
cd ..
ls
exit
ps aux | ack-grep bashee
ps aux
kill -9 2594
ps
ps aux
exit
ps aux | ack-grep banshee
ps aux | ack-grep 'banshee'
pa aux
psa
ps aux
exit
ipython 
clear
quit
exit
dir
sudo pip install nose 
sudo pip install nose --upgrade 
cd sandbox/
ls
cd por
cd tdd
dir
ls
nosetests test
cd ..
dir
ls
cd project/ls
ls
cd project/
ls
cd mysite/
ls
nosetests tests
nosetests --help
nosetests -v tests
cd ..
nosetests -v mysite.tests
cd mysite/
ls
cd tests/
cd ..
cd tdd/
dir
ls
cd test/
dir
more test_calculator.py
less test_calculator.py
nose test_calculator.py
nosetests test_calculator.py
nosetests test_calculator.py:test_subtraction
nosetests test_calculator.py:test_sum
@ct 
exit
cd Downloads/
java -jar hudson.war 
dir
clear
cd 
cd .hudson/
ls
cd jboq
cd jbos
cd jobs/
dir
cd ..
cd plugins/
ls
cd ..
cd war/
dir
cd ..
rm -rf .hudson/
dir
ls
more helloworld.js 
node helloworld.js 
node
cd local/
dir
cd node/
ls
source .bashrc
cd 
source .bashrc
node
~/local/node/bin/node helloworld.js 
clear
exit
dir
ls
cd  Público/
ls
dir
cd vmware
cd ..
cd Vídeos
dir
cd ..
dir
ls
cd local/
dir
cd node/
dir
cd bin 
dir
node
cd ..
clear
python 
cd 
@ip
dir
clear
dir
ls
clear
exit
@v  .bash_aliases 
exit
ipython 
translate pt-BR en 
@ip 
translate pt-BR en
@ip 
clear
exit
cd repositories/git 
git clone https://github.com/gfxmonk/rednose.git
cd rednose/
ls
more sample_test.py 
dir
more rednose.xml
ls
more rednose.py
cd ..
git clone https://github.com/brunobord/tdaemon.git
cd tdaemon/
dir
@v tdaemon.py 
exit
python
clear
exit
@v .themes/Murrine\ Applecore\ Square/gtk-2.0/gtkrc 
exit
sudo 
sudo  dhclient
dhclient
exit
sudo su 
exit 
ps aux | ack-grep 'tdaemon'
ps aux | ack-grep 'python'
exit
cd bitchx/
./Bitchx irc.freenode.net 6665 -n red5
./BitchX irc.freenode.net 6665 -n red5
exit
cd Ens
cd Envs/
mkvirtualenv ptc --no-site-package
@wo ptc
rmvirtualenv ptc
@da ptc
@de
deactivate 
rmvirtualenv 
rmvirtualenv ptc
dir
ls
exit
pip install rednose
sudo su 
exit
